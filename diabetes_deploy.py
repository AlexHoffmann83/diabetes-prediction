# Deploy do Modelo

# Para rodar do deploy, escrever no terminal: streamlit run diabetes_deploy.py

# Instale o streamlit: pip install streamlit

# Imports
import joblib
import streamlit as st
import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler

# Carregar o modelo e o scaler
modelo = joblib.load('modelos/modelo_decision_tree_classifier.pkl')
scaler = joblib.load('modelos/scaler_standard.pkl')

# Fun√ß√£o para pr√©-processar os dados de entrada
# As colunas devem ser exatamente as mesmas usadas durante o treinamento
def preprocess_input(pregnancies, 
                     glucose, 
                     bloodPressure, 
                     skinThickness, 
                     Insulin,
                     bmi, 
                     age):
    
    # Dataframe
    data = pd.DataFrame({
        'Pregnancies': [pregnancies],
        'Glucose': [glucose],
        'BloodPressure': [bloodPressure],
        'SkinThickness': [skinThickness],
        'Insulin': [insulin],
        'BMI': [bmi],
        'Age': [age],
    })

    # Lista de colunas
    numeric_cols = ['Pregnancies', 
                    'Glucose', 
                    'BloodPressure', 
                    'SkinThickness', 
                    'Insulin',
                    'BMI',
                    'Age']

    # Aplicando padroniza√ß√£o
    data[numeric_cols] = scaler.transform(data[numeric_cols])

    return data

# Fun√ß√£o para fazer previs√µes
def predict(data):
    prediction = modelo.predict(data)
    return prediction

# Interface do Streamlit
#st.title("Preditor de Diabetes com Intelig√™ncia Artificial")
st.markdown("""
<h1 style='text-align: center; color: #2c3e50;'>
    Preditor de Diabetes com <br> Intelig√™ncia Artificial
</h1>
""", unsafe_allow_html=True)

st.markdown("<br>", unsafe_allow_html=True)

st.markdown("""
<div style='padding: 10px; border: 2px solid #d9534f; border-radius: 5px; background-color: #f2dede; color: #a94442'>
<b>Aviso Importante:</b> Este aplicativo n√£o √© um dispositivo m√©dico.
√â um modelo preditivo desenvolvido com base em dados p√∫blicos (Pima Indians Diabetes Dataset),
e deve ser usado apenas para fins educacionais ou explorat√≥rios. <br><br>
Este resultado n√£o substitui a avalia√ß√£o de um profissional da sa√∫de. Em caso de suspeita de diabetes, procure atendimento m√©dico.
</div>
""", unsafe_allow_html=True)

st.markdown("<br>", unsafe_allow_html=True)

with st.expander("üìà Sobre o modelo de predi√ß√£o"):
    st.markdown("""
    - Modelo utilizado: **√Årvore de Decis√£o (Decision Tree Classifier)**.
    - Acur√°cia geral obtida na valida√ß√£o: **74,68%**
    - Base de dados: [Pima Indians Diabetes Database](https://www.kaggle.com/datasets/uciml/pima-indians-diabetes-database).
    - M√©tricas calculadas usando valida√ß√£o de dados com divis√£o 80/20.
    - O desenvolvimento cient√≠fico de valida√ß√£o de dados, escolha do algor√≠tmo de Machine Learning e coment√°rios pertinentes, podem ser visualizados no Github: [Reposit√≥rio do projeto](https://github.com/AlexHoffmann83/diabetes-prediction).
    """)


# Cria√ß√£o de campos para entrada de dados
pregnancies = st.selectbox('N√∫mero de Gravidez', list(range(0, 21)))
glucose = st.number_input('Glicose', min_value = 40, max_value = 300, value = 80)
bloodPressure = st.number_input('Press√£o Arterial Diast√≥lica', min_value = 40, max_value = 150, value = 80)
skinThickness = st.number_input('PCT (espessura da prega cut√¢nea do triceps)', min_value = 0, max_value = 500, value = 20)
insulin = st.number_input('Insulina', min_value = 0, max_value = 900, value = 79)
bmi = st.number_input('IMC (√≠ndice de massa corporal)', min_value = 0.0, max_value = 100.0, value = 31.9, step=0.1, format="%.1f")
age = st.selectbox('Idade', list(range(0, 101)), index=20)


# Bot√£o para realizar previs√µes
if st.button('Prever Diabetes'):

    # Executa a fun√ß√£o de pr√©-processamento de dados
    input_data = preprocess_input(pregnancies, glucose, bloodPressure, skinThickness, insulin, bmi, age)

    # Faz a previs√£o com o modelo
    prediction = predict(input_data)

    st.markdown('### Resultado da Previs√£o:')
    st.success('‚úÖ Diabetes Prevista: **Sim**' if prediction[0] == 1 else '‚ùå Diabetes Prevista: **N√£o**')
    if prediction== 1:
        st.markdown("### **Risco elevado de diabetes**")
        st.warning("Recomenda-se procurar orienta√ß√£o m√©dica para investiga√ß√£o detalhada.")
    else:
        st.markdown("### **Baixo risco identificado**")
        st.info("Mesmo com baixo risco, h√°bitos saud√°veis e exames regulares s√£o fundamentais para preven√ß√£o.")

st.markdown("---")

st.markdown(
"""
<div style='text-align: justify'>
Este projeto √© um objeto de estudo de Intelig√™ncia Artificial (Machine Learning) realizado com dados do Pima Indians Diabetes Database.<br>
Base de dados: <a href='https://www.kaggle.com/datasets/uciml/pima-indians-diabetes-database' target='_blank'>Pima Indians Diabetes Database</a><br>
<br>
A base de dados utilizada neste projeto, foi escolhida por ser uma das mais amplamente utilizadas em pesquisas de aprendizado de m√°quina para o estudo de diabetes. Ela cont√©m informa√ß√µes cl√≠nicas de mulheres de ascend√™ncia Pima, um grupo ind√≠gena norte-americano que apresenta alta incid√™ncia da doen√ßa, o que a torna valiosa para modelos preditivos. Por sua estrutura bem organizada, alta incid√™ncia de casos positivos de diabetes e amplo uso acad√™mico, essa base √© refer√™ncia em benchmark para algoritmos de classifica√ß√£o.
<br><br>
‚ö†Ô∏è Aten√ß√£o: Apesar da boa acur√°cia, o modelo n√£o considera fatores cl√≠nicos adicionais
como hist√≥rico familiar, h√°bitos alimentares, n√≠vel de estresse ou exames laboratoriais n√£o presentes na base original. <br><br>
O resultado deste preditor, apesar de ter uma alta acur√°cia ao prever diabetes no grupo de estudo, pode n√£o ser assertivo ao prever diabetes em outros 
grupos √©tnicos, ou em grupos com h√°bitos diferentes das √≠ndias de ascend√™ncia Pima estudadas pelo nosso modelo de ML.<br><br>
<strong>Entretanto, em caso de previs√£o positiva para diabetes, recomendamos fortemente que o usu√°rio consulte um m√©dico especialista.</strong>
</div>
""",
unsafe_allow_html=True
)

st.markdown("<br>", unsafe_allow_html=True)

st.markdown("**Autor:** Alex Hoffmann  \nGitHub: [@AlexHoffmann83](https://github.com/AlexHoffmann83)")
